if [[ -z "$CSCS_REGISTRY_USERNAME" || -z "$CSCS_REGISTRY_PASSWORD" ]] ; then
    # Obtain credentials for JFrog - required to push the image and meta-data
    creds_json=$(curl --retry 5 --retry-connrefused --fail --silent "$CSCS_CI_MW_URL/credentials?token=$CI_JOB_TOKEN&job_id=$CI_JOB_ID&creds=container_registry")
    oras_creds="$(echo ${creds_json} | jq --join-output '"--username " + .container_registry.username + " --password " +.container_registry.password')"

    jfrog_u="$(echo ${creds_json} | jq -r '.container_registry.username')"
    jfrog_p="$(echo ${creds_json} | jq -r '.container_registry.password')"
else
    log "using credentials provided in the environment"
    jfrog_u="$CSCS_REGISTRY_USERNAME"
    jfrog_p="$CSCS_REGISTRY_PASSWORD"
fi

log "log in to jfrog.svc.cscs.ch with oras"

# Create a unique credentials path for this job,
# because by default credentials are stored in ~/.docker/config.json which
# causes conflicts for concurrent jobs.
oras_path=$(mktemp -d)
jfrog_creds_path="${oras_path}/docker/config.json"
log "jfrog credentials to be stored in $jfrog_creds_path"

log "oras login --registry-config ${jfrog_creds_path}  jfrog.svc.cscs.ch --username ${jfrog_u} --password-stdin"
echo ${jfrog_p} | oras login --registry-config ${jfrog_creds_path}  jfrog.svc.cscs.ch --username "${jfrog_u}" --password-stdin
[[ $? -eq 0  ]] || err "failed oras login to JFrog - can't push image to uenv registry"

# Propagate username and password defined in ${pipeline_path}/util/setup-oras (to be used in pre-install script)
BUILD_VARS+=("CSCS_REGISTRY_USERNAME=$jfrog_u" "CSCS_REGISTRY_PASSWORD=$jfrog_p")
BUILD_VAR_NAMES+=("CSCS_REGISTRY_USERNAME" "CSCS_REGISTRY_PASSWORD")
